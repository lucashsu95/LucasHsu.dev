import{_ as n,c as o,m as e,J as l,w as s,a,E as r,o as h}from"./chunks/framework.CiAxhH1b.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"python/112全國技藝競賽筆記/02-資料結構/雜湊表HashTable.md","filePath":"python/112全國技藝競賽筆記/02-資料結構/雜湊表HashTable.md","lastUpdated":1729437298000}'),i={name:"python/112全國技藝競賽筆記/02-資料結構/雜湊表HashTable.md"},_=e("h2",{id:"雜湊表-hash-table",tabindex:"-1"},[a("雜湊表(Hash Table) "),e("a",{class:"header-anchor",href:"#雜湊表-hash-table","aria-label":'Permalink to "雜湊表(Hash Table)"'},"​")],-1),c=e("p",null,"雜湊表（Hash table，也叫哈希表），是根據鍵（Key）而直接查詢在記憶體儲存位置的資料結構。也就是說，它通過計算出一個鍵值的函數，將所需查詢的數據映射到表中一個位置來讓人查詢，這加快了查找速度。這個映射函數稱做雜湊函數，存放記錄的數組稱做雜湊表",-1),d=e("p",null,"這種方法使得查找、插入和刪除等操作可以在平均時間複雜度為",-1),p=e("p",null,"O(1)",-1),b=e("p",null,[a("的情況下完成，這也是雜湊表作為資料結構非常重要的一個原因。然而，當出現雜湊衝突時，即兩個不同的鍵映射到了同一個儲存位置，雜湊表的操作效率可能會下降。因此，設計一個好的"),e("strong",null,"雜湊函數以減少雜湊衝突"),a("是使用雜湊表時需要考慮的一個重要因素。")],-1);function u(f,m,k,w,H,T){const t=r("VPNolebaseInlineLinkPreview");return h(),o("div",null,[_,e("ul",null,[e("li",null,[l(t,{href:"https://zh.wikipedia.org/zh-tw/%E5%93%88%E5%B8%8C%E8%A1%A8",target:"_blank",rel:"noreferrer"},{default:s(()=>[a("雜湊表-wiki")]),_:1})]),e("li",null,[l(t,{href:"https://ithelp.ithome.com.tw/articles/10268077",target:"_blank",rel:"noreferrer"},{default:s(()=>[a("【Day9】[資料結構]-雜湊表Hash Table")]),_:1})])]),c,d,p,b])}const N=n(i,[["render",u]]);export{x as __pageData,N as default};
