import{_ as h,c as t,J as s,V as l,E as i,o as p}from"./chunks/framework.RK-3fdBv.js";const B=JSON.parse('{"title":"Java OOP 物件導向程式設計：從混亂到秩序的重構之旅","description":"完整的Java物件導向程式設計(OOP)實戰教學！透過智慧家電控制系統範例，從混亂程式碼逐步重構為優雅OOP設計。深度講解Class、Object、Interface、多型(Polymorphism)等核心概念，搭配實際程式範例，適合Java初學者到進階開發者學習物件導向設計模式。","frontmatter":{"outline":"deep","head":[["meta",{"name":"author","content":"許恩綸"}],["meta",{"name":"keywords","content":"Java物件導向程式設計, Java OOP教學, 物件導向程式設計實戰, Java Interface多型, Java程式重構, 智慧家電控制系統, Java設計模式, 物件導向設計原則, Java class object interface, 程式碼重構實例, Java polymorphism教學, 軟體架構設計, Java初學者教學, 程式設計模式實戰"}],["meta",{"name":"description","content":"完整的Java物件導向程式設計(OOP)實戰教學！透過智慧家電控制系統範例，從混亂程式碼逐步重構為優雅OOP設計。深度講解Class、Object、Interface、多型(Polymorphism)等核心概念，搭配實際程式範例，適合Java初學者到進階開發者學習物件導向設計模式。"}],["meta",{"property":"og:title","content":"Java物件導向程式設計完整實戰教學 | OOP重構實例與設計模式深度解析"}],["meta",{"property":"og:description","content":"透過智慧家電控制系統實戰案例，完整學習Java OOP核心概念：Class、Object、Interface、多型。從混亂程式碼到優雅設計的重構過程，包含實際程式範例與設計模式應用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lucashsu95.github.io/LucasHsu.dev/images/java-cover.jpg"}],["meta",{"property":"og:url","content":"https://lucashsu95.github.io/LucasHsu.dev/java/oop/oop-1.html"}],["meta",{"property":"og:site_name","content":"LucasHsu.dev - 程式開發教學"}],["meta",{"property":"article:author","content":"許恩綸"}],["meta",{"property":"article:published_time","content":"2024-10-03T16:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-03T16:00:00.000Z"}],["meta",{"property":"article:section","content":"Java程式設計"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"OOP"}],["meta",{"property":"article:tag","content":"物件導向程式設計"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:site","content":"@lucashsu95"}],["meta",{"name":"twitter:creator","content":"@lucashsu95"}],["meta",{"name":"twitter:title","content":"Java物件導向程式設計完整實戰教學 | OOP重構實例與設計模式"}],["meta",{"name":"twitter:description","content":"透過智慧家電控制系統實戰，完整學習Java OOP：Class、Object、Interface、多型。從混亂程式碼到優雅設計的重構教學，包含實際範例與設計模式應用。"}],["link",{"rel":"canonical","href":"https://lucashsu95.github.io/LucasHsu.dev/java/oop/oop-1.html"}],["meta",{"name":"robots","content":"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1"}],["script",{"type":"application/ld+json","content":"{\\n  \\"@context\\": \\"https://schema.org\\",\\n  \\"@type\\": \\"TechnicalArticle\\",\\n  \\"headline\\": \\"Java物件導向程式設計完整實戰教學 | OOP重構實例與設計模式深度解析\\",\\n  \\"description\\": \\"透過智慧家電控制系統實戰案例，完整學習Java OOP核心概念：Class、Object、Interface、多型。從混亂程式碼到優雅設計的重構過程，包含實際程式範例與設計模式應用。\\",\\n  \\"author\\": {\\n    \\"@type\\": \\"Person\\", \\n    \\"name\\": \\"許恩綸\\",\\n    \\"url\\": \\"https://lucashsu95.github.io/LucasHsu.dev/\\"\\n  },\\n  \\"publisher\\": {\\n    \\"@type\\": \\"Organization\\",\\n    \\"name\\": \\"LucasHsu.dev\\",\\n    \\"url\\": \\"https://lucashsu95.github.io/LucasHsu.dev/\\"\\n  },\\n  \\"datePublished\\": \\"2024-10-04T00:00:00+08:00\\",\\n  \\"dateModified\\": \\"2024-10-04T00:00:00+08:00\\",\\n  \\"mainEntityOfPage\\": {\\n    \\"@type\\": \\"WebPage\\",\\n    \\"@id\\": \\"https://lucashsu95.github.io/LucasHsu.dev/java/oop/oop-1.html\\"\\n  },\\n  \\"image\\": \\"https://lucashsu95.github.io/LucasHsu.dev/images/java-cover.jpg\\",\\n  \\"articleSection\\": \\"Java程式設計\\",\\n  \\"keywords\\": [\\"Java\\", \\"OOP\\", \\"物件導向程式設計\\", \\"Interface\\", \\"多型\\", \\"程式重構\\", \\"設計模式\\"],\\n  \\"audience\\": {\\n    \\"@type\\": \\"Audience\\",\\n    \\"audienceType\\": \\"程式設計學習者\\"\\n  },\\n  \\"educationalLevel\\": \\"初學者到進階\\",\\n  \\"learningResourceType\\": \\"教學文章\\",\\n  \\"programmingLanguage\\": \\"Java\\"\\n}\\n"}]]},"headers":[],"relativePath":"java/oop/oop-1.md","filePath":"java/oop/oop-1.md","lastUpdated":1759991415000}'),k={name:"java/oop/oop-1.md"},e=l("",44);function r(d,g,y,o,A,c){const a=i("NolebaseGitContributors"),n=i("NolebaseGitChangelog");return p(),t("div",null,[e,s(a),s(n)])}const u=h(k,[["render",r]]);export{B as __pageData,u as default};
