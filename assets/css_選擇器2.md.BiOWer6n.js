import{_ as n,c as p,J as s,V as e,E as i,o as h}from"./chunks/framework.RK-3fdBv.js";const l="/LucasHsu.dev/assets/image-1.BD0udy45.png",k="/LucasHsu.dev/assets/image-2.BQ4NouSy.png",r="/LucasHsu.dev/assets/image-3.0Uabxnjy.png",o="/LucasHsu.dev/assets/image-4.Crp3xDFX.png",d="/LucasHsu.dev/assets/image.DuEaB4jE.png",b=JSON.parse('{"title":"CSS 『&』","description":"","frontmatter":{"head":[["meta",{"name":"author","content":"許恩綸"}],["meta",{"name":"keywords","content":"CSS, css, 選擇器, 父類選擇器, &符號"}],["meta",{"property":"og:title","content":"CSS技巧 - 使用『&』符號進行選擇器簡化"}],["meta",{"property":"og:description","content":"學習如何使用CSS的『&』符號來簡化選擇器的書寫，讓程式碼更乾淨易讀"}],["meta",{"property":"og:type","content":"article"}]]},"headers":[],"relativePath":"css/選擇器2.md","filePath":"css/選擇器2.md","lastUpdated":1758447054000}'),g={name:"css/選擇器2.md"},c=e('<h1 id="css-『-』" tabindex="-1">CSS 『&amp;』 <a class="header-anchor" href="#css-『-』" aria-label="Permalink to &quot;CSS 『&amp;』&quot;">​</a></h1><h2 id="介紹" tabindex="-1">介紹 <a class="header-anchor" href="#介紹" aria-label="Permalink to &quot;介紹&quot;">​</a></h2><p>通常在寫class的時候會把一個大區塊的class加在前面，像這樣我要選到.box就會這麼做。</p><p><img src="'+l+'" alt="alt text" loading="lazy"></p><p>但程式碼寫久了或是要做一個很複雜的專案，就會成程式碼很多擠的結果...</p><p><img src="'+k+'" alt="alt text" loading="lazy"></p><h2 id="開始使用" tabindex="-1">開始使用 &amp; <a class="header-anchor" href="#開始使用" aria-label="Permalink to &quot;開始使用 &amp;&quot;">​</a></h2><p>...好...不管寫的聰不聰明也不管你看不看得懂，反正我今天要安麗你個CSS選擇器</p><p>可以讓程式碼變得乾淨?</p><p>『&amp;』:上一级選擇器，簡單來說就是省略的寫法，不用再寫一次父類的名字了。</p><p><img src="'+r+'" alt="alt text" loading="lazy"></p><p>是不是跟Sass很像，但...不一樣的就是Css要加&amp;Sass不用</p><p><img src="'+o+`" alt="alt text" loading="lazy"></p><p>多種寫法 還有其他的選取方法</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> .</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">box</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> .</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">box</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> h1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> .</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">box</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> p</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">hover</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> .</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">box</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">active</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">after</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">::</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">before</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">media</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">max-width</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1200</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;"> .</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">wrap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>⬇️</p><p><img src="`+d+'" alt="alt text" loading="lazy"></p><p>雖然到了最後，程式碼一樣會變得很大包，這是必免不了的，所以可以自己判斷使用<s>反正在打程式的時候可以逃掉很多字</s></p>',18);function y(m,_,B,D,u,A){const a=i("NolebaseGitContributors"),t=i("NolebaseGitChangelog");return h(),p("div",null,[c,s(a),s(t)])}const x=n(g,[["render",y]]);export{b as __pageData,x as default};
