import{_ as k,c as p,m as s,J as i,w as r,V as n,E as a,o,a as t}from"./chunks/framework.RK-3fdBv.js";const d="/LucasHsu.dev/assets/image.uFRSKOH5.png",g="/LucasHsu.dev/assets/image-1.CJrzO7KJ.png",c="/LucasHsu.dev/assets/image-2.CgCI6BqY.png",f=JSON.parse('{"title":"SQL JOIN","description":"","frontmatter":{"outline":"deep","head":[["meta",{"name":"author","content":"許恩綸"}],["meta",{"name":"keywords","content":"SQL, sql, sql join,sql 關聯"}],["meta",{"name":"og:title","content":"SQL JOIN"}],["meta",{"name":"og:description","content":"SQL JOIN"}],["meta",{"name":"og:type","content":"article"}]]},"headers":[],"relativePath":"php/sql/sql-join.md","filePath":"php/sql/sql-join.md","lastUpdated":1729448465000}'),E={name:"php/sql/sql-join.md"},u=n('<h1 id="sql-join" tabindex="-1">SQL JOIN <a class="header-anchor" href="#sql-join" aria-label="Permalink to &quot;SQL JOIN&quot;">​</a></h1><h2 id="關聯式-join" tabindex="-1">關聯式 JOIN <a class="header-anchor" href="#關聯式-join" aria-label="Permalink to &quot;關聯式 JOIN&quot;">​</a></h2><p><img src="'+d+`" alt="alt text" loading="lazy"></p><p>以下為SQL中Left Join與Inner Join的簡單說明。</p><h2 id="inner-join-內連接" tabindex="-1"><strong>Inner Join (內連接)</strong> <a class="header-anchor" href="#inner-join-內連接" aria-label="Permalink to &quot;**Inner Join (內連接)**&quot;">​</a></h2><ul><li><strong>作用：</strong> 只返回兩個表格中符合連接條件的資料。</li><li><strong>比喻：</strong> 想像兩個表格是兩個班級的學生名單，Inner Join就像是在找兩個班級中都有的學生。</li><li><strong>範例：</strong><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> students </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> s</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">INNER JOIN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> courses </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> c </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> s</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">student_id</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> c</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">student_id</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre></div>這會找出同時存在於students和courses表格中的學生資訊。</li></ul><h2 id="left-join-左外連接" tabindex="-1"><strong>Left Join (左外連接)</strong> <a class="header-anchor" href="#left-join-左外連接" aria-label="Permalink to &quot;**Left Join (左外連接)**&quot;">​</a></h2><ul><li><strong>作用：</strong> 返回左邊表格的所有資料，並根據連接條件在右邊表格中尋找匹配的資料。如果右邊表格中沒有匹配的資料，則在對應的位置填入NULL。</li><li><strong>比喻：</strong> 繼續用班級的例子，Left Join就像是在左邊班級的所有學生中，去右邊班級找有沒有對應的學生。如果沒有，就保留左邊班級的學生，在右邊班級的欄位填入空值。</li><li><strong>範例：</strong><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> students </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> s</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LEFT JOIN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> courses </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> c </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> s</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">student_id</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> c</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">student_id</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre></div>這會找出所有students表格中的學生資訊，即使他們在courses表格中沒有選修任何課程。</li></ul><h2 id="簡單總結" tabindex="-1"><strong>簡單總結</strong> <a class="header-anchor" href="#簡單總結" aria-label="Permalink to &quot;**簡單總結**&quot;">​</a></h2><ul><li><strong>Inner Join:</strong> 只找兩個表格的共同部分。</li><li><strong>Left Join:</strong> 保留左邊表格的所有資料，並在右邊表格中尋找匹配。</li><li><strong>視覺化：</strong> 想像兩個表格是兩個圓圈，重疊的部分就是Inner Join的結果。Left Join則會包含整個左邊圓圈。</li></ul><h2 id="何時使用" tabindex="-1"><strong>何時使用</strong> <a class="header-anchor" href="#何時使用" aria-label="Permalink to &quot;**何時使用**&quot;">​</a></h2><ul><li><strong>Inner Join:</strong> 當你只想找出兩個表格中都有的資料時。</li><li><strong>Left Join:</strong> 當你想要保留左邊表格的所有資料，同時了解這些資料在右邊表格中是否有對應的資料時。</li></ul><h2 id="常見問題" tabindex="-1"><strong>常見問題</strong> <a class="header-anchor" href="#常見問題" aria-label="Permalink to &quot;**常見問題**&quot;">​</a></h2><ul><li><strong>什麼是右外連接 (Right Join)?</strong> 右外連接與左外連接類似，只是保留的是右邊表格的所有資料。</li><li><strong>什麼是全外連接 (Full Outer Join)?</strong> 全外連接會保留兩個表格的所有資料，無論是否有匹配。</li></ul><h2 id="練習題" tabindex="-1">練習題 <a class="header-anchor" href="#練習題" aria-label="Permalink to &quot;練習題&quot;">​</a></h2><p>有兩個資料表，一對多，users 和 user_quotas 的表</p><p><strong>users 資料表</strong><img src="`+g+'" alt="alt text" loading="lazy"></p><p><strong>user_quotas 資料表</strong><img src="'+c+'" alt="alt text" loading="lazy"></p>',18),A={class:"tip custom-block"},y=s("p",{class:"custom-block-title"},"練習題",-1),D=s("p",null,"請列出每位使用者的總配額，並且按照總配額的大到小排序!",-1),C=s("code",null,"test.sql",-1),B=n(`<div class="warning custom-block"><p class="custom-block-title">要輸出的結果</p><table><thead><tr><th>id</th><th>account</th><th>total_value</th></tr></thead><tbody><tr><td>2</td><td>user02</td><td>9</td></tr><tr><td>3</td><td>user03</td><td>8</td></tr><tr><td>4</td><td>user04</td><td>8</td></tr><tr><td>1</td><td>user01</td><td>7</td></tr></tbody></table></div><details class="details custom-block"><summary>看答案</summary><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> u</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">id</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">u</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">account</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">SUM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">q</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> total_quota</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> users u</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">LEFT JOIN</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> user_quotas q </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ON</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> u</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">id</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> q</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">user_id</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">GROUP BY</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> u</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">id</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">u</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">account</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ORDER BY</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> total_quota </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">DESC</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre></div></details><p>其它關建字：Right Join (右外連接)、Full Outer Join (全外連接)、Cross Join (交叉連接)、Natural Join (自然連接)、Natural Left Join (自然左外連接)、Natural Right Join (自然右外連接)、Natural Full Join (自然全外連接)、Natural Cross Join (自然交叉連接)、Subquery Join (子查詢連接)</p>`,3);function _(m,q,b,J,v,N){const l=a("VPNolebaseInlineLinkPreview"),e=a("NolebaseGitContributors"),h=a("NolebaseGitChangelog");return o(),p("div",null,[u,s("div",A,[y,D,s("p",null,[i(l,{href:"../assets/sql-join/test.sql",download:"test.sql"},{default:r(()=>[t("下載"),C,t("檔")]),_:1})])]),B,i(e),i(h)])}const L=k(E,[["render",_]]);export{f as __pageData,L as default};
