import{_ as n,c as r,m as e,J as a,w as h,a as t,V as d,E as s,o as c}from"./chunks/framework.RK-3fdBv.js";const y=JSON.parse('{"title":"hsutools cmd檔案操作工具","description":"","frontmatter":{},"headers":[],"relativePath":"portfolio/python小工具/hsutools.md","filePath":"portfolio/python小工具/hsutools.md","lastUpdated":1732429635000}'),p={name:"portfolio/python小工具/hsutools.md"},u=e("h1",{id:"hsutools-cmd檔案操作工具",tabindex:"-1"},[t("hsutools cmd檔案操作工具 "),e("a",{class:"header-anchor",href:"#hsutools-cmd檔案操作工具","aria-label":'Permalink to "hsutools cmd檔案操作工具"'},"​")],-1),m=d(`<h2 id="how-to-start" tabindex="-1">How to Start ? <a class="header-anchor" href="#how-to-start" aria-label="Permalink to &quot;How to Start ?&quot;">​</a></h2><ol><li>下載後用<strong>以系統管理員身份執行</strong><code>setup.exe</code>檔</li><li>就可以把資料夾刪除了</li><li>到需要使用的地方下指令(ex:hsu filem,hsu rename,hsu cpath,hsu cpath --path <code>&lt;path-name&gt;</code>)</li></ol><h2 id="introduce" tabindex="-1">Introduce <a class="header-anchor" href="#introduce" aria-label="Permalink to &quot;Introduce&quot;">​</a></h2><h3 id="資料夾路徑readme生成器" tabindex="-1">資料夾路徑README生成器 <a class="header-anchor" href="#資料夾路徑readme生成器" aria-label="Permalink to &quot;資料夾路徑README生成器&quot;">​</a></h3><p>讀取指定資料夾的結構，並生成一個包含目錄信息的<code>demo.md</code>文件。具體而言，它執行以下操作：</p><ol><li>使用深度優先搜索 (DFS) 遍歷資料夾結構。</li><li>對於每個資料夾，生成一個以&quot;第{章節編號}章&quot;為標題的段落，後接資料夾名稱。</li><li>對於每個檔案，生成以&quot;{章節編號}-{檔案編號}&quot;為標題的條目，後接檔案名稱和相對路徑。</li><li>在demo.md文件中按深度遞增的順序列出所有檔案和資料夾。</li><li>根據資料夾的深度生成對應的標題，最多支援到第 9999 層資料夾(可以自己設定)。</li></ol><p>這樣的demo文件可用於清晰地展示資料夾結構，以方便他人了解和瀏覽。為了實現這一目的，腳本通過將空格替換為&#39;%20&#39;並將反斜線替換為斜線，以生成相對於根目錄的檔案路徑。</p><h4 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h4><ol><li>確保程式中的 <code>folder_name</code> 變數指定了你要生成 README.md 檔案的資料夾路徑。</li><li>執行程式，它會在指定的資料夾中生成一個名為 <code>demo.md</code> 的 README 檔案，其中包含了該資料夾的結構和檔案清單。</li></ol><h4 id="注意事項" tabindex="-1">注意事項 <a class="header-anchor" href="#注意事項" aria-label="Permalink to &quot;注意事項&quot;">​</a></h4><ul><li>請確保程式執行的資料夾中包含欲生成 README.md 檔案的目標資料夾。</li><li>請注意程式會忽略指定的檔案名單，預設情況下會忽略 <code>.git</code>、<code>README.md</code>、<code>demo.md</code> 和 <code>folder_path_readme_generator.py</code> 這些檔案。</li></ul><h3 id="檔案分類器" tabindex="-1">檔案分類器 <a class="header-anchor" href="#檔案分類器" aria-label="Permalink to &quot;檔案分類器&quot;">​</a></h3><h4 id="功能介紹" tabindex="-1">功能介紹 <a class="header-anchor" href="#功能介紹" aria-label="Permalink to &quot;功能介紹&quot;">​</a></h4><p>可以依照<strong>修改日期</strong>、<strong>檔案名稱</strong>、<strong>檔案的副檔名</strong>生成資料夾，再把檔案放進資料夾</p><p>其中<code>檔案名稱</code>還可以自定義想要的前綴</p><h3 id="檔案重新命名器" tabindex="-1">檔案重新命名器 <a class="header-anchor" href="#檔案重新命名器" aria-label="Permalink to &quot;檔案重新命名器&quot;">​</a></h3><p>檔案名稱取代工具，它可以幫助你在指定的資料夾中批次取代檔案名稱中的文字。</p><h4 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h4><p>這個程式具有以下功能：</p><ul><li>在指定的資料夾中批次取代檔案名稱中的文字。</li><li>可選擇是否包含資料夾名稱一起取代。</li></ul><h4 id="使用方式-1" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式-1" aria-label="Permalink to &quot;使用方式&quot;">​</a></h4><ol><li>在檔案路徑欄位輸入欲處理的資料夾路徑。</li><li>在「要取代的文字」欄位輸入欲被取代的文字。</li><li>在「取代後的文字」欄位輸入欲取代後的文字。</li><li>若需一併取代資料夾名稱，勾選「連同資料夾名稱一起取代」選項。</li><li>點擊「執行」按鈕開始取代。</li></ol><h2 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">.venv\\Scripts\\activate</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> src/build.py</span></span></code></pre></div><p>儲存到<code>requirements.txt</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> freeze</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre></div>`,27);function k(b,g,_,f,q,v){const i=s("VPNolebaseInlineLinkPreview"),l=s("NolebaseGitContributors"),o=s("NolebaseGitChangelog");return c(),r("div",null,[u,e("ul",null,[e("li",null,[a(i,{href:"https://github.com/lucashsu95/hsutools",target:"_blank",rel:"noreferrer"},{default:h(()=>[t("Github")]),_:1})])]),m,a(l),a(o)])}const x=n(p,[["render",k]]);export{y as __pageData,x as default};
