import{_ as p,c as k,m as s,J as i,w as e,V as d,E as a,o as r,a as l}from"./chunks/framework.RK-3fdBv.js";const x=JSON.parse('{"title":"Css Display 顯示","description":"","frontmatter":{"head":[["meta",{"name":"keywords","content":"css,css diaply,css flex"}],["meta",{"name":"author","content":"許恩綸"}],["meta",{"name":"og:title","content":"Css Display 顯示"}],["meta",{"name":"og:description","content":"display屬性用於控制HTML元素在網頁上的顯示方式。這個屬性有多個不同的值，每個值都決定了元素的顯示方式。以下是display屬性的一些常見值"}],["meta",{"name":"og:type","content":"article"}]]},"headers":[],"relativePath":"css/basic/display.md","filePath":"css/basic/display.md","lastUpdated":1729448465000}'),o={name:"css/basic/display.md"},c=d(`<h1 id="css-display-顯示" tabindex="-1">Css Display 顯示 <a class="header-anchor" href="#css-display-顯示" aria-label="Permalink to &quot;Css Display 顯示&quot;">​</a></h1><p>display屬性用於控制HTML元素在網頁上的顯示方式。這個屬性有多個不同的值，每個值都決定了元素的顯示方式。以下是display屬性的一些常見值：</p><h2 id="block" tabindex="-1">block: <a class="header-anchor" href="#block" aria-label="Permalink to &quot;block:&quot;">​</a></h2><p>block是display屬性的默認值（對大多數HTML元素來說）。 元素將在新的行上開始，佔據父元素的整個寬度，並總是在上下文中顯示為獨立的塊。 常見的block元素包括<code>&lt;div&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;h1&gt;</code>等。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">a</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">button</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> block</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  width</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 120</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  height</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 40</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  background-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> #</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">007bff</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> #</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">fff</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  text-align</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> center</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  line-height</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 40</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  text-decoration</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> none</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>這個範例將<code>&lt;a&gt;</code>元素轉換為塊級元素，以創建一個具有特定寬度和高度的按鈕。</p><h2 id="inline" tabindex="-1">inline: <a class="header-anchor" href="#inline" aria-label="Permalink to &quot;inline:&quot;">​</a></h2><p>inline使元素以行內元素的方式顯示。 元素不會強制斷行，並只佔據其內容所需的寬度。 常見的inline元素包括<code>&lt;span&gt;</code>、<code>&lt;a&gt;</code>、<code>&lt;strong&gt;</code>等。</p><h2 id="inline-block" tabindex="-1">inline-block: <a class="header-anchor" href="#inline-block" aria-label="Permalink to &quot;inline-block:&quot;">​</a></h2><p>inline-block使元素以行內塊的方式顯示。 元素不會強制斷行，但可以佔據其內容所需的寬度，同時可以應用塊級元素的樣式，如width和height。 這對於創建水平導航菜單等元素很有用。</p><h2 id="none" tabindex="-1">none: <a class="header-anchor" href="#none" aria-label="Permalink to &quot;none:&quot;">​</a></h2><p>使用none值，元素將完全不可見，且不佔據空間。 這可用於在不刪除元素的情況下將其隱藏，或根據需要動態顯示/隱藏元素。</p><h2 id="flex" tabindex="-1">flex: <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;flex:&quot;">​</a></h2><p>flex使元素成為一個靈活的容器，其子元素將按照一定的比例分佈在容器中。 這可用於創建自適應佈局，並使子元素根據可用空間動態調整位置和大小。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">flex-container</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> flex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  justify-content</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> space-between</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>這個範例創建一個水平排列的彈性容器，其中子元素之間具有均勻的間距。</p><h2 id="grid-網格布局" tabindex="-1">grid 網格布局: <a class="header-anchor" href="#grid-網格布局" aria-label="Permalink to &quot;grid 網格布局:&quot;">​</a></h2><p>grid允許創建多行和多列的網格布局，以更精確地控制元素的位置。 這對於複雜的網頁佈局非常有用。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">grid-container</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> grid</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  grid-template-columns</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> repeat</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">fr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  gap</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>這個範例創建一個網格容器，其中有3列且列之間有10像素的間距</p><h2 id="小遊戲" tabindex="-1">小遊戲 <a class="header-anchor" href="#小遊戲" aria-label="Permalink to &quot;小遊戲&quot;">​</a></h2>`,21),g=s("img",{src:"https://hackmd.io/_uploads/Sy-11PNRn.png",alt:"",loading:"lazy"},null,-1),y=s("img",{src:"https://hackmd.io/_uploads/SJB6CLNCn.png",alt:"",loading:"lazy"},null,-1);function b(m,u,A,B,_,f){const n=a("VPNolebaseInlineLinkPreview"),t=a("NolebaseGitContributors"),h=a("NolebaseGitChangelog");return r(),k("div",null,[c,s("ol",null,[s("li",null,[g,i(n,{href:"https://flexboxfroggy.com/#zh-tw",target:"_blank",rel:"noreferrer"},{default:e(()=>[l("flex小青蛙")]),_:1})]),s("li",null,[y,i(n,{href:"https://cssgridgarden.com/#zh-tw",target:"_blank",rel:"noreferrer"},{default:e(()=>[l("grid花園")]),_:1})])]),i(t),i(h)])}const v=p(o,[["render",b]]);export{x as __pageData,v as default};
