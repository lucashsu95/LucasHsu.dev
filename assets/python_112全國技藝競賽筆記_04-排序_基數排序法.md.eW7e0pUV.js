import{_ as t,c as r,m as e,J as o,w as n,V as i,E as s,o as l,a as _}from"./chunks/framework.CiAxhH1b.js";const S=JSON.parse('{"title":"Radix Sort (基數排序法)","description":"","frontmatter":{},"headers":[],"relativePath":"python/112全國技藝競賽筆記/04-排序/基數排序法.md","filePath":"python/112全國技藝競賽筆記/04-排序/基數排序法.md","lastUpdated":1729437298000}'),d={name:"python/112全國技藝競賽筆記/04-排序/基數排序法.md"},c=i('<h1 id="radix-sort-基數排序法" tabindex="-1">Radix Sort (基數排序法) <a class="header-anchor" href="#radix-sort-基數排序法" aria-label="Permalink to &quot;Radix Sort (基數排序法)&quot;">​</a></h1><h2 id="介紹" tabindex="-1">介紹 <a class="header-anchor" href="#介紹" aria-label="Permalink to &quot;介紹&quot;">​</a></h2><p>「非比較性」的演算法，屬於「分配性」的方式，是利用資料裡的值的某些特性來作為排序的依據，而非是用比較的方式。 在某些時候，其實基數排序法可以比快速排序法要快。</p><h2 id="學習資源" tabindex="-1">學習資源 <a class="header-anchor" href="#學習資源" aria-label="Permalink to &quot;學習資源&quot;">​</a></h2>',4);function h(p,m,u,f,x,P){const a=s("VPNolebaseInlineLinkPreview");return l(),r("div",null,[c,e("ul",null,[e("li",null,[o(a,{href:"https://ithelp.ithome.com.tw/articles/10202713",target:"_blank",rel:"noreferrer"},{default:n(()=>[_("演算法 基數排序法 (Radix Sort)")]),_:1})])])])}const V=t(d,[["render",h]]);export{S as __pageData,V as default};
