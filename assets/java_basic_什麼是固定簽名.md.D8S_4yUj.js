import{_ as n,c as h,J as s,V as l,E as i,o as e}from"./chunks/framework.RK-3fdBv.js";const v=JSON.parse('{"title":"什麼是固定簽名？","description":"","frontmatter":{"outline":"deep","head":[["meta",{"name":"author","content":"許恩綸"}],["meta",{"name":"keywords","content":"Java main 方法, Java 固定簽名, Java 入口點, Java static void main, JVM 啟動, Java 新手教學, main 方法錯誤, main 方法格式, Java 方法簽名, Java 執行原理"}],["meta",{"name":"og:title","content":"Java main 方法固定簽名說明｜JVM 入口點與常見錯誤解析"}],["meta",{"name":"og:description","content":"Java main 方法為什麼必須是 public static void main(String[] args)？本篇說明 JVM 為何要求固定簽名、常見 main 方法錯誤與正確寫法，幫助新手理解 Java 程式啟動原理與避免踩雷。"}],["meta",{"name":"og:type","content":"article"}],["meta",{"name":"og:image","content":"https://lucashsu95.github.io/LucasHsu.dev/images/java-cover.jpg"}]]},"headers":[],"relativePath":"java/basic/什麼是固定簽名.md","filePath":"java/basic/什麼是固定簽名.md","lastUpdated":1758447054000}'),k={name:"java/basic/什麼是固定簽名.md"},p=l(`<h1 id="什麼是固定簽名" tabindex="-1">什麼是固定簽名？ <a class="header-anchor" href="#什麼是固定簽名" aria-label="Permalink to &quot;什麼是固定簽名？&quot;">​</a></h1><p><strong>簽名（Signature）</strong> 指的是方法的完整定義格式，包括：</p><ul><li>方法名</li><li>參數類型和數量</li><li>返回類型</li><li>訪問修飾符</li></ul><h2 id="java-main-方法的固定簽名" tabindex="-1">Java main 方法的固定簽名 <a class="header-anchor" href="#java-main-方法的固定簽名" aria-label="Permalink to &quot;Java main 方法的固定簽名&quot;">​</a></h2><p>Java 規定程序的入口點必須是這個<strong>完全相同</strong>的格式：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre></div><h2 id="為什麼是固定的" tabindex="-1">為什麼是固定的？ <a class="header-anchor" href="#為什麼是固定的" aria-label="Permalink to &quot;為什麼是固定的？&quot;">​</a></h2><p><strong>1. JVM 的要求</strong></p><ul><li>Java 虛擬機（JVM）在啟動程序時會尋找這個<strong>確切的</strong>方法簽名</li><li>如果簽名不匹配，JVM 就找不到入口點</li></ul><p><strong>2. 錯誤示例</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ❌ 這些都不會被 JVM 識別為程序入口</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          // 缺少 static</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     // 參數類型錯誤</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 返回類型錯誤</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   // 方法名大小寫錯誤</span></span></code></pre></div><p><strong>3. 正確示例</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ✅ 這些都是有效的 main 方法簽名</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[])</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   // 陣列語法的另一種寫法</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 可變參數語法</span></span></code></pre></div><h2 id="類比" tabindex="-1">類比 <a class="header-anchor" href="#類比" aria-label="Permalink to &quot;類比&quot;">​</a></h2><p>就像電話號碼格式一樣：</p><ul><li>電話系統要求特定格式才能撥通</li><li>JVM 要求特定的方法簽名才能啟動程序</li><li>即使你不使用 <code>args</code> 參數，也必須保持這個格式</li></ul><p>這就是為什麼即使不使用命令行參數，<code>String[] args</code> 也必須存在的原因！</p>`,17);function r(d,g,o,c,A,y){const a=i("NolebaseGitContributors"),t=i("NolebaseGitChangelog");return e(),h("div",null,[p,s(a),s(t)])}const m=n(k,[["render",r]]);export{v as __pageData,m as default};
