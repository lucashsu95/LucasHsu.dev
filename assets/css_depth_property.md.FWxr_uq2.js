import{_ as l,c as t,J as s,V as p,E as i,o as h}from"./chunks/framework.RK-3fdBv.js";const B=JSON.parse('{"title":"@property","description":"","frontmatter":{},"headers":[],"relativePath":"css/depth/property.md","filePath":"css/depth/property.md","lastUpdated":1743260101000}'),e={name:"css/depth/property.md"},k=p(`<h1 id="property" tabindex="-1">@property <a class="header-anchor" href="#property" aria-label="Permalink to &quot;@property&quot;">​</a></h1><p>CSS中的<code>@property</code>是一個強大的規則，用於擴展和控制自定義屬性（CSS變數）的功能。它允許開發者定義自定義屬性的類型、初始值以及是否繼承，並使這些屬性可以進行動畫化。以下是詳細介紹及範例：</p><h2 id="property的用途" tabindex="-1"><strong>@property的用途</strong> <a class="header-anchor" href="#property的用途" aria-label="Permalink to &quot;**@property的用途**&quot;">​</a></h2><ol><li><strong>定義類型</strong>：使用<code>syntax</code>來指定自定義屬性的類型，例如<code>、</code>或\`\`，避免不正確的值被使用。</li><li><strong>設置初始值</strong>：使用<code>initial-value</code>為自定義屬性提供默認值，當屬性未被明確設置時會使用此值。</li><li><strong>控制繼承</strong>：通過<code>inherits</code>來決定屬性是否從父元素繼承。</li><li><strong>支持動畫</strong>：使某些以前無法動畫化的屬性（如顏色漸變）可以平滑過渡。</li></ol><hr><h2 id="語法" tabindex="-1"><strong>語法</strong> <a class="header-anchor" href="#語法" aria-label="Permalink to &quot;**語法**&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">property</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">  {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    syntax: &#39;&#39;;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    inherits: ;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    initial-value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: ;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre></div><ul><li>\`\`：自定義屬性的名稱，必須以<code>--</code>開頭。</li><li><code>syntax</code>：指定屬性接受的數據類型，例如<code>、</code>等。</li><li><code>inherits</code>：設置是否從父元素繼承值，默認為<code>true</code>。</li><li><code>initial-value</code>：指定屬性的初始值。</li></ul><hr><h2 id="範例" tabindex="-1"><strong>範例</strong> <a class="header-anchor" href="#範例" aria-label="Permalink to &quot;**範例**&quot;">​</a></h2><h3 id="範例1-定義顏色屬性並應用" tabindex="-1">範例1：定義顏色屬性並應用 <a class="header-anchor" href="#範例1-定義顏色屬性並應用" aria-label="Permalink to &quot;範例1：定義顏色屬性並應用&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">property</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> --main-color </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    syntax: &#39;&#39;;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    inherits: false;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    initial-value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">ff0000;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">box</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    background-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> var</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">--main-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>在此範例中，自定義屬性<code>--main-color</code>被定義為顏色類型，初始值為紅色（#ff0000），且不會從父元素繼承。</p><hr><h3 id="範例2-動畫化角度屬性" tabindex="-1">範例2：動畫化角度屬性 <a class="header-anchor" href="#範例2-動畫化角度屬性" aria-label="Permalink to &quot;範例2：動畫化角度屬性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">property</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> --rotation </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    syntax: &#39;&#39;;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    inherits: false;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    initial-value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: 0deg;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">star</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    --rotation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">deg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    transform</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> rotate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">var</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">--rotation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> spin </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">s</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> linear</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> infinite</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">keyframes</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> spin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    to</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        --rotation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 360</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">deg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>此範例中，自定義屬性<code>--rotation</code>被設置為角度類型（），並用於動畫化旋轉效果。</p><hr><h3 id="範例3-控制繼承行為" tabindex="-1">範例3：控制繼承行為 <a class="header-anchor" href="#範例3-控制繼承行為" aria-label="Permalink to &quot;範例3：控制繼承行為&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">property</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> --box-color </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    syntax: &#39;&#39;;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    inherits: false;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    initial-value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: cornflowerblue;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">parent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    --box-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> green</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    background-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> var</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">--box-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">child</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    background-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> var</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">--box-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div><p>因為在<code>@property</code>中設置了<code>inherits: false;</code>，子元素<code>.child</code>不會繼承父元素<code>.parent</code>的顏色，而是使用初始值（cornflowerblue）。</p>`,21);function r(d,o,c,g,y,A){const a=i("NolebaseGitContributors"),n=i("NolebaseGitChangelog");return h(),t("div",null,[k,s(a),s(n)])}const E=l(e,[["render",r]]);export{B as __pageData,E as default};
